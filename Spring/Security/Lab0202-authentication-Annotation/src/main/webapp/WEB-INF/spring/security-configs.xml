<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:c="http://www.springframework.org/schema/c"
xmlns:p="http://www.springframework.org/schema/p"
xmlns:aop="http://www.springframework.org/schema/aop"
xmlns:mvc="http://www.springframework.org/schema/mvc"
xmlns:security="http://www.springframework.org/schema/security"
xsi:schemaLocation="http://www.springframework.org/schema/beans
    https://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/security
    https://www.springframework.org/schema/security/spring-security.xsd"
    >

    <!-- Auth. COnfigs -->
    <security:authentication-manager>
        <security:authentication-provider>

<!--Can User jdbc user detail service-->
<!--            <security:jdbc-user-service data-source-ref="dataSource"-->
<!--            users-by-username-query="select username, password, enabled"-->
<!--            authorities-by-username-query="">-->

<!--            </security:jdbc-user-service>-->

            <!-- Def. is in Memmory Use -->
        <security:user-service >



            <security:user name="user" password="$2a$10$JeRlRSlP9/QHti6D8OFJAuyK6JXukGkrRJKPhgPeWUYtshVlKOTxK" authorities="ROLE_USER"/>
            <security:user name="admin" password="$2a$10$JeRlRSlP9/QHti6D8OFJAuyK6JXukGkrRJKPhgPeWUYtshVlKOTxK" authorities="ROLE_ADMIN, ROLE_USER"/>


        </security:user-service>

            <security:password-encoder hash="bcrypt"/>
        </security:authentication-provider>
    </security:authentication-manager>


    <!-- Authroization Configs -->
    <!-- when auto config = true , spring will create default login/logout URLs -->
    <!-- def name is springSecurityFilterChain -->
    <!-- if we didnot provide any urls, all resources wont be secured -->
    <!--  -->
    <security:http auto-config="true" >
        <security:access-denied-handler error-page="/error"/>
<!--Instead of auto-config can use these-->
<!--        <security:form-login/>-->
<!--        <security:logout/>-->

<!--    This is for having custom login page and logout links     -->
        <security:form-login login-page="/login"
                             login-processing-url="/submitlogin"
                             authentication-failure-url="login?error"
                             username-parameter="username"
                             password-parameter="password"/>
<!--    spring gejnerated cookies will auto deleted, here we are jsut testing -->
        <security:logout delete-cookies="JSESSIONID"
                         logout-url="/logout"
                         logout-success-url="/"/>

<!--        Enable and disable csrf-->
<!--        <security:csrf/>-->
<!--        <security:csrf disabled="true"/>-->

        <!-- Session Management -->
        <!--ï‚§	How it is handled does a new session close an old one? Or does it throw error -->
        <security:session-management >
            <security:concurrency-control max-sessions="1" error-if-maximum-exceeded="true"/>
        </security:session-management>

        <!-- Remember : Order is important, first match will be chosen -->
        <security:intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/user/*" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/*" access="permitAll()"/>




        <!-- Caan also configure reember me -->
        <!--     key represents the encryption key to encrypt username and password   -->
        <security:remember-me key="remember-me-key"
                              remember-me-parameter="remember-me"
                              token-validity-seconds="2419200"/>

        <security:session-management>
            <security:concurrency-control max-sessions="1"/>
        </security:session-management>

    </security:http>

</beans>